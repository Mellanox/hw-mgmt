From 519010d368f264743b427412b72ef993cd408011 Mon Sep 17 00:00:00 2001
From: Vadim Pasternak <vadimp@mellanox.com>
Date: Wed, 30 Jan 2019 20:23:20 +0000
Subject: [PATCH not for upstream] platform/x86: mlx-platform: DMI match for
 marginal systems

Add DMI match rule for the system with broken SMBIOS.

Signed-off-by: Vadim Pasternak <vadimp@mellanox.com>
---
 drivers/platform/x86/mlx-platform.c | 26 ++++++++++++++++++++++++++
 1 file changed, 26 insertions(+)

diff --git a/drivers/platform/x86/mlx-platform.c b/drivers/platform/x86/mlx-platform.c
index 6d6688ab..f1d8418 100644
--- a/drivers/platform/x86/mlx-platform.c
+++ b/drivers/platform/x86/mlx-platform.c
@@ -6,6 +6,7 @@
  * Copyright (C) 2016-2018 Vadim Pasternak <vadimp@mellanox.com>
  */
 
+#include <asm/intel-family.h>
 #include <linux/device.h>
 #include <linux/dmi.h>
 #include <linux/i2c.h>
@@ -1637,6 +1638,24 @@ static int __init mlxplat_dmi_qmb7xx_matched(const struct dmi_system_id *dmi)
 	return 1;
 };
 
+static int __init mlxplat_dmi_undefined_matched(const struct dmi_system_id *dmi)
+{
+	switch (boot_cpu_data.x86_model) {
+	case INTEL_FAM6_IVYBRIDGE:
+			return mlxplat_dmi_default_matched(dmi);
+
+	case INTEL_FAM6_ATOM_SILVERMONT2:
+			return mlxplat_dmi_msn21xx_matched(dmi);
+
+	case INTEL_FAM6_BROADWELL_XEON_D: /* fall through */
+	case INTEL_FAM6_BROADWELL_CORE:
+		return mlxplat_dmi_qmb7xx_matched(dmi);
+
+	default:
+		return 1;
+	}
+}
+
 static const struct dmi_system_id mlxplat_dmi_table[] __initconst = {
 	{
 		.callback = mlxplat_dmi_msn274x_matched,
@@ -1751,6 +1770,13 @@ static const struct dmi_system_id mlxplat_dmi_table[] __initconst = {
 			DMI_MATCH(DMI_BOARD_NAME, "VMOD0007"),
 		},
 	},
+	/* This tuple must be last */
+	{
+		.callback = mlxplat_dmi_undefined_matched,
+		.matches = {
+			DMI_MATCH(DMI_BOARD_VENDOR, "Mellanox Technologies"),
+		},
+	},
 	{ }
 };
 
-- 
2.1.4

