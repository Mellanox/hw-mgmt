From 2eadbd930fe687b5ab1b2caa339f40950f8651a3 Mon Sep 17 00:00:00 2001
From: Oleksandr Shamray <oleksandrs@nvidia.com>
Date: Mon, 9 Dec 2024 13:38:05 +0200
Subject: [PATCH 2/2] platform: mellanox: Downstream: Add support DGX flavor of
 next-generation 800GB/s ethernet switch.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

This system is based on Nvidia SN5600 Spectrumâ„¢-4 Based 64x800Gb/s ETH Switch System, with the
following key changes:

Key changes:
- New Power Supply: AC/DC PSUs power repaced by rack busbar input power ORv3 DC 48V-54V.
- Dimensions MGX/DGX 1U compliance Tool-less top cover (fast cover opening with no scre

Signed-off-by: Oleksandr Shamray <oleksandrs@nvidia.com>
---
 drivers/platform/mellanox/mlx-platform.c | 28 ++++++++++++++++++++++++++++
 1 file changed, 28 insertions(+)

diff --git a/drivers/platform/mellanox/mlx-platform.c b/drivers/platform/mellanox/mlx-platform.c
index 5a8423a..e1da75b 100644
--- a/drivers/platform/mellanox/mlx-platform.c
+++ b/drivers/platform/mellanox/mlx-platform.c
@@ -9764,6 +9764,27 @@ static int __init mlxplat_dmi_ng800_matched(const struct dmi_system_id *dmi)
 	return mlxplat_register_platform_device();
 }
 
+static int __init mlxplat_dmi_ng800_dgx_matched(const struct dmi_system_id *dmi)
+{
+    int i;
+
+    mlxplat_max_adap_num = MLXPLAT_CPLD_MAX_PHYS_ADAPTER_NUM;
+    mlxplat_mux_num = ARRAY_SIZE(mlxplat_ng800_mux_data);
+    mlxplat_mux_data = mlxplat_ng800_mux_data;
+    mlxplat_hotplug = &mlxplat_mlxcpld_dgx_ext_data;
+    mlxplat_hotplug->deferred_nr =
+		   mlxplat_msn21xx_channels[MLXPLAT_CPLD_GRP_CHNL_NUM - 1];
+    mlxplat_led = &mlxplat_default_ng_led_data;
+    mlxplat_regs_io = &mlxplat_default_ng_regs_io_data;
+    mlxplat_fan = &mlxplat_default_fan_data;
+    for (i = 0; i < ARRAY_SIZE(mlxplat_mlxcpld_wd_set_type2); i++)
+		   mlxplat_wd_data[i] = &mlxplat_mlxcpld_wd_set_type2[i];
+    mlxplat_i2c = &mlxplat_mlxcpld_i2c_ng_data;
+    mlxplat_regmap_config = &mlxplat_mlxcpld_regmap_config_ng400;
+
+    return mlxplat_register_platform_device();
+}
+
 static int __init mlxplat_dmi_l1_switch_matched(const struct dmi_system_id *dmi)
 {
 	int i;
@@ -10021,6 +10042,13 @@ static const struct dmi_system_id mlxplat_dmi_table[] __initconst = {
 		},
 	},
 	{
+	    .callback = mlxplat_dmi_ng800_dgx_matched,
+	    .matches = {
+			DMI_MATCH(DMI_BOARD_NAME, "VMOD0013"),
+			DMI_EXACT_MATCH(DMI_PRODUCT_SKU, "HI174"),
+	    },
+	},
+	{
 		.callback = mlxplat_dmi_ng800_matched,
 		.matches = {
 			DMI_MATCH(DMI_BOARD_NAME, "VMOD0013"),
-- 
2.8.4

