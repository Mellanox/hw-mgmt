From 7b3d375e329256d70df1552c210f81867ea285bd Mon Sep 17 00:00:00 2001
From: Vadim Pasternak <vadimp@mellanox.com>
Date: Sun, 18 Feb 2018 11:08:22 +0000
Subject: [PATCH v1 1/2] mlxsw: qsfp_sysfs: Support CPLD version reading based
 on DMI system type

Add system type detection through DMI table in order to distinct between
the systems supporting reading only one CPLD version and capable of reading
the versions of three CPLDs.

Signed-off-by: Vadim Pasternak <vadimp@mellanox.com>
---
 drivers/net/ethernet/mellanox/mlxsw/qsfp_sysfs.c | 42 +++++++++++++++++++++---
 1 file changed, 37 insertions(+), 5 deletions(-)

diff --git a/drivers/net/ethernet/mellanox/mlxsw/qsfp_sysfs.c b/drivers/net/ethernet/mellanox/mlxsw/qsfp_sysfs.c
index 3bc6cf8..07cc7ea 100644
--- a/drivers/net/ethernet/mellanox/mlxsw/qsfp_sysfs.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/qsfp_sysfs.c
@@ -33,6 +33,7 @@
  */
 
 #include <linux/device.h>
+#include <linux/dmi.h>
 #include <linux/err.h>
 #include <linux/kernel.h>
 #include <linux/sysfs.h>
@@ -49,7 +50,8 @@
 #define MLXSW_QSFP_MAX_NUM		64
 #define MLXSW_QSFP_MIN_REQ_LEN		4
 #define MLXSW_QSFP_STATUS_VALID_TIME	(120 * HZ)
-#define MLXSW_QSFP_MAX_CPLD_NUM		1
+#define MLXSW_QSFP_MAX_CPLD_NUM		3
+#define MLXSW_QSFP_MIN_CPLD_NUM		1
 
 static const u8 mlxsw_qsfp_page_number[] = { 0xa0, 0x00, 0x01, 0x02, 0x03 };
 static const u16 mlxsw_qsfp_page_shift[] = { 0x00, 0x80, 0x80, 0x80, 0x80 };
@@ -85,6 +87,8 @@ struct mlxsw_qsfp {
 	struct device_attribute *cpld_dev_attrs;
 };
 
+static int mlxsw_qsfp_cpld_num = MLXSW_QSFP_MIN_CPLD_NUM;
+
 static int
 mlxsw_qsfp_query_module_eeprom(struct mlxsw_qsfp *mlxsw_qsfp, u8 index,
 			       loff_t off, size_t count, int page, char *buf)
@@ -210,11 +214,11 @@ mlxsw_qsfp_cpld_show(struct device *dev, struct device_attribute *attr,
 	u32 version, i;
 	int err;
 
-	for (i = 0; i < MLXSW_QSFP_MAX_CPLD_NUM; i++) {
+	for (i = 0; i < mlxsw_qsfp_cpld_num; i++) {
 		if ((mlxsw_qsfp->cpld_dev_attrs + i) == attr)
 			break;
 	}
-	if (i == MLXSW_QSFP_MAX_CPLD_NUM)
+	if (i == mlxsw_qsfp_cpld_num)
 		return -EINVAL;
 
 	mlxsw_reg_msci_pack(msci_pl, i);
@@ -227,6 +231,32 @@ mlxsw_qsfp_cpld_show(struct device *dev, struct device_attribute *attr,
 	return sprintf(buf, "%u\n", version);
 }
 
+static int __init mlxsw_qsfp_dmi_set_cpld_num(const struct dmi_system_id *dmi)
+{
+	mlxsw_qsfp_cpld_num = MLXSW_QSFP_MAX_CPLD_NUM;
+
+	return 1;
+};
+
+static struct dmi_system_id mlxsw_qsfp_dmi_table[] __initdata = {
+	{
+		.callback = mlxsw_qsfp_dmi_set_cpld_num,
+		.matches = {
+			DMI_MATCH(DMI_BOARD_VENDOR, "Mellanox Technologies"),
+			DMI_MATCH(DMI_PRODUCT_NAME, "MSN24"),
+		},
+	},
+	{
+		.callback = mlxsw_qsfp_dmi_set_cpld_num,
+		.matches = {
+			DMI_MATCH(DMI_BOARD_VENDOR, "Mellanox Technologies"),
+			DMI_MATCH(DMI_PRODUCT_NAME, "MSN27"),
+		},
+	},
+	{ }
+};
+MODULE_DEVICE_TABLE(dmi, mlxsw_qsfp_dmi_table);
+
 int mlxsw_qsfp_init(struct mlxsw_core *mlxsw_core,
 		    const struct mlxsw_bus_info *mlxsw_bus_info,
 		    struct mlxsw_qsfp **p_qsfp)
@@ -242,6 +272,8 @@ int mlxsw_qsfp_init(struct mlxsw_core *mlxsw_core,
 	if (!strcmp(mlxsw_bus_info->device_kind, "i2c"))
 		return 0;
 
+	dmi_check_system(mlxsw_qsfp_dmi_table);
+
 	mlxsw_qsfp = devm_kzalloc(mlxsw_bus_info->dev, sizeof(*mlxsw_qsfp),
 				  GFP_KERNEL);
 	if (!mlxsw_qsfp)
@@ -285,7 +317,7 @@ int mlxsw_qsfp_init(struct mlxsw_core *mlxsw_core,
 		return -ENOMEM;
 
 	mlxsw_qsfp->cpld_dev_attrs = devm_kzalloc(mlxsw_bus_info->dev,
-					MLXSW_QSFP_MAX_CPLD_NUM *
+					mlxsw_qsfp_cpld_num *
 					sizeof(*mlxsw_qsfp->cpld_dev_attrs),
 					GFP_KERNEL);
 	if (!mlxsw_qsfp->cpld_dev_attrs)
@@ -323,7 +355,7 @@ int mlxsw_qsfp_init(struct mlxsw_core *mlxsw_core,
 	}
 
 	cpld_dev_attr = mlxsw_qsfp->cpld_dev_attrs;
-	for (i = 0; i < MLXSW_QSFP_MAX_CPLD_NUM; i++, cpld_dev_attr++) {
+	for (i = 0; i < mlxsw_qsfp_cpld_num; i++, cpld_dev_attr++) {
 		cpld_dev_attr->show = mlxsw_qsfp_cpld_show;
 		cpld_dev_attr->attr.mode = 0444;
 		cpld_dev_attr->attr.name = devm_kasprintf(mlxsw_bus_info->dev,
-- 
2.1.4

