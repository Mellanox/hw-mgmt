From 1dff5178538466037b40edfb074ec2233b69b7d6 Mon Sep 17 00:00:00 2001
From: Vadim Pasternak <vadimp@mellanox.com>
Date: Sun, 18 Feb 2018 11:44:19 +0000
Subject: [PATCH v1 2/2] platform/x86: mlx-platform: Add support for more
 reset cause types

Patch contains:
- Additional reset causes fields for mlxreg-io.
- Fix for devm_ioport_map return value:
  devm_ioport_map() returns NULL on error but we accidentally check for
  error pointers instead.
- Fix for fan5 and fan6 mask bits.

Signed-off-by: Vadim Pasternak <vadimp@mellanox.com>
---
 drivers/platform/x86/mlx-platform.c | 24 ++++++++++++++++++------
 1 file changed, 18 insertions(+), 6 deletions(-)

diff --git a/drivers/platform/x86/mlx-platform.c b/drivers/platform/x86/mlx-platform.c
index 61cbe35..33fece8 100644
--- a/drivers/platform/x86/mlx-platform.c
+++ b/drivers/platform/x86/mlx-platform.c
@@ -472,14 +472,14 @@ static struct mlxreg_core_data mlxplat_mlxcpld_default_ng_fan_items_data[] = {
 	{
 		.label = "fan5",
 		.reg = MLXPLAT_CPLD_LPC_REG_FAN_OFF,
-		.mask = BIT(3),
+		.mask = BIT(4),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_ng_fan,
 		.hpdev.nr = 15,
 	},
 	{
 		.label = "fan6",
 		.reg = MLXPLAT_CPLD_LPC_REG_FAN_OFF,
-		.mask = BIT(3),
+		.mask = BIT(5),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_ng_fan,
 		.hpdev.nr = 16,
 	},
@@ -943,10 +943,18 @@ static struct mlxreg_core_data mlxplat_mlxcpld_default_regs_io_data[] = {
 	  GENMASK(7, 0) & ~BIT(0), 0x00, 0444 },
 	{ "cause_short_pb", MLXPLAT_CPLD_LPC_REG_RESET_CAUSE_OFF,
 	  GENMASK(7, 0) & ~BIT(1), 0x00, 0444 },
-	{ "cause_pwr_aux", MLXPLAT_CPLD_LPC_REG_RESET_CAUSE_OFF,
+	{ "cause_aux_pwr_or_refresh", MLXPLAT_CPLD_LPC_REG_RESET_CAUSE_OFF,
 	  GENMASK(7, 0) & ~BIT(2), 0x00, 0444 },
-	{ "cause_pwr_fail", MLXPLAT_CPLD_LPC_REG_RESET_CAUSE_OFF,
+	{ "cause_main_pwr_fail", MLXPLAT_CPLD_LPC_REG_RESET_CAUSE_OFF,
 	  GENMASK(7, 0) & ~BIT(3), 0x00, 0444 },
+	{ "cause_sw_reset", MLXPLAT_CPLD_LPC_REG_RESET_CAUSE_OFF,
+	  GENMASK(7, 0) & ~BIT(4), 0x00, 0444 },
+	{ "cause_fw_reset", MLXPLAT_CPLD_LPC_REG_RESET_CAUSE_OFF,
+	  GENMASK(7, 0) & ~BIT(5), 0x00, 0444 },
+	{ "cause_hotswap_or_wd", MLXPLAT_CPLD_LPC_REG_RESET_CAUSE_OFF,
+	  GENMASK(7, 0) & ~BIT(6), 0x00, 0444 },
+	{ "cause_asic_thermal", MLXPLAT_CPLD_LPC_REG_RESET_CAUSE_OFF,
+	  GENMASK(7, 0) & ~BIT(7), 0x00, 0444 },
 	{ "psu1_on", MLXPLAT_CPLD_LPC_REG_GP1_OFF, GENMASK(7, 0) & ~BIT(0),
 	  0x00, 0200 },
 	{ "psu2_on", MLXPLAT_CPLD_LPC_REG_GP1_OFF,  GENMASK(7, 0) & ~BIT(1),
@@ -1166,13 +1174,17 @@ static int __init mlxplat_init(void)
 
 	base = devm_ioport_map(&mlxplat_dev->dev,
 			       mlxplat_lpc_resources[1].start, 1);
-	if (IS_ERR(base))
+	if (!base) {
+		err = -ENOMEM;
 		goto fail_platform_mux_register;
+	}
 
 	mlxplat_hotplug->regmap = devm_regmap_init(&mlxplat_dev->dev, NULL,
 					base, &mlxplat_mlxcpld_regmap_config);
-	if (IS_ERR(mlxplat_hotplug->regmap))
+	if (IS_ERR(mlxplat_hotplug->regmap)) {
+		err = PTR_ERR(mlxplat_hotplug->regmap);
 		goto fail_platform_mux_register;
+	}
 
 	/* Set default registers. */
 	for (j = 0; j <  mlxplat_mlxcpld_regmap_config.num_reg_defaults; j++) {
-- 
2.1.4

