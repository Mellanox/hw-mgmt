From f6410966453b7671a0c4032652db36b2e67ba43c Mon Sep 17 00:00:00 2001
From: Vadim Pasternak <vadimp@mellanox.com>
Date: Wed, 25 Oct 2017 12:17:18 +0000
Subject: [v4.9 backport 31/31] mlxsw: core: extend QSFP EEPROM sysfs size

It extends the size of QSFP EEPROM from 4 to 5 pages, where each page is
of size 128 bytes; and extends a counter in initial loop over ports by 1.

Signed-off-by: Vadim Pasternak <vadimp@mellanox.com>
---
 drivers/net/ethernet/mellanox/mlxsw/qsfp_sysfs.c | 16 +++++++++-------
 1 file changed, 9 insertions(+), 7 deletions(-)

diff --git a/drivers/net/ethernet/mellanox/mlxsw/qsfp_sysfs.c b/drivers/net/ethernet/mellanox/mlxsw/qsfp_sysfs.c
index 9a652f9..35a376b 100644
--- a/drivers/net/ethernet/mellanox/mlxsw/qsfp_sysfs.c
+++ b/drivers/net/ethernet/mellanox/mlxsw/qsfp_sysfs.c
@@ -41,7 +41,7 @@
 #include "core.h"
 
 #define MLXSW_QSFP_I2C_ADDR		0x50
-#define MLXSW_QSFP_PAGE_NUM		4
+#define MLXSW_QSFP_PAGE_NUM		5
 #define MLXSW_QSFP_PAGE_SIZE		128
 #define MLXSW_QSFP_SUB_PAGE_NUM		3
 #define MLXSW_QSFP_SUB_PAGE_SIZE	48
@@ -104,28 +104,30 @@ static int
 mlxsw_qsfp_get_module_eeprom(struct mlxsw_qsfp *mlxsw_qsfp, u8 index,
 			     char *buf, loff_t off, size_t count)
 {
-	int page_ind, page, page_off, subpage, offset, res = 0;
+	int page_ind, page, page_off, subpage, offset, size, res = 0;
 	int err;
 
 	if (!count)
 		return -EINVAL;
 
 	memset(buf, 0, count);
+	size = count;
 	while (res < count) {
 		page_ind = off / MLXSW_QSFP_PAGE_SIZE;
 		page_off = off % MLXSW_QSFP_PAGE_SIZE;
 		page = mlxsw_qsfp_page_number[page_ind];
 		offset = mlxsw_qsfp_page_shift[page_ind] + page_off;
 		subpage = page_off / MLXSW_QSFP_SUB_PAGE_SIZE;
-		count = min_t(u16, count, mlxsw_qsfp_sub_page_size[subpage]);
+		size = min_t(u16, size, mlxsw_qsfp_sub_page_size[subpage]);
 		err = mlxsw_qsfp_query_module_eeprom(mlxsw_qsfp, index, offset,
-						     count, page, buf + res);
+						     size, page, buf + res);
 		if (err) {
 			dev_err(mlxsw_qsfp->bus_info->dev, "Eeprom query failed\n");
 			return err;
 		}
-		off += count;
-		res += count;
+		off += size;
+		res += size;
+		size = count - size;
 	}
 
 	return res;
@@ -205,7 +207,7 @@ int mlxsw_qsfp_init(struct mlxsw_core *mlxsw_core,
 	mlxsw_qsfp->bus_info = mlxsw_bus_info;
 	mlxsw_bus_info->dev->platform_data = mlxsw_qsfp;
 
-	for (i = 1; i < MLXSW_QSFP_MAX_NUM; i++) {
+	for (i = 1; i <= MLXSW_QSFP_MAX_NUM; i++) {
 		mlxsw_reg_pmlp_pack(pmlp_pl, i);
 		err = mlxsw_reg_query(mlxsw_qsfp->core, MLXSW_REG(pmlp),
 				      pmlp_pl);
-- 
2.1.4

