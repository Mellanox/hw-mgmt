From fef18a397d724073378b59f14e7881898cb224fd Mon Sep 17 00:00:00 2001
From: Vadim Pasternak <vadimp@nvidia.com>
Date: Fri, 12 May 2023 06:28:18 +0000
Subject: [PATCH backport 5.10.179 10/15] DBG: i2c: mlxcpld: COME BF3 debug

To be merged to previous two TMP patches.

Signed-off-by: Vadim Pasternak <vadimp@nvidia.com>
---
 drivers/platform/mellanox/mlx-platform.c | 102 +++++++++++++++++------
 1 file changed, 77 insertions(+), 25 deletions(-)

diff --git a/drivers/platform/mellanox/mlx-platform.c b/drivers/platform/mellanox/mlx-platform.c
index 72823ad92..3ddae56cd 100644
--- a/drivers/platform/mellanox/mlx-platform.c
+++ b/drivers/platform/mellanox/mlx-platform.c
@@ -38,12 +38,12 @@
 #define MLXPLAT_CPLD_LPC_REG_CPLD3_PN1_OFFSET	0x09
 #define MLXPLAT_CPLD_LPC_REG_CPLD4_PN_OFFSET	0x0a
 #define MLXPLAT_CPLD_LPC_REG_CPLD4_PN1_OFFSET	0x0b
+#define MLXPLAT_CPLD_LPC_REG_RESET_GP1_OFFSET	0x17
 #define MLXPLAT_CPLD_LPC_REG_RESET_GP2_OFFSET	0x19
 #define MLXPLAT_CPLD_LPC_REG_RESET_GP4_OFFSET	0x1c
 #define MLXPLAT_CPLD_LPC_REG_RESET_CAUSE_OFFSET	0x1d
 #define MLXPLAT_CPLD_LPC_REG_RST_CAUSE1_OFFSET	0x1e
 #define MLXPLAT_CPLD_LPC_REG_RST_CAUSE2_OFFSET	0x1f
-#define MLXPLAT_CPLD_LPC_REG_PG_RST_OFFSET	0x19
 #define MLXPLAT_CPLD_LPC_REG_LED1_OFFSET	0x20
 #define MLXPLAT_CPLD_LPC_REG_LED2_OFFSET	0x21
 #define MLXPLAT_CPLD_LPC_REG_LED3_OFFSET	0x22
@@ -185,6 +185,7 @@
 #define MLXPLAT_CPLD_LPC_REG_CONFIG2_OFFSET	0xfc
 #define MLXPLAT_CPLD_LPC_REG_CONFIG3_OFFSET	0xfd
 #define MLXPLAT_CPLD_LPC_REG_EXT_MIN_OFFSET	0x100
+#define MLXPLAT_CPLD_LPC_REG_EXT_MID_OFFSET	0x195
 #define MLXPLAT_CPLD_LPC_REG_EXT_MAX_OFFSET	0x1ff
 #define MLXPLAT_CPLD_LPC_IO_RANGE		0x100
 
@@ -392,6 +393,7 @@ struct mlxplat_priv {
 
 static struct platform_device *mlxplat_dev;
 static int mlxplat_i2c_main_complition_notify(void *handle, int id);
+static void __iomem *i2c_bridge_addr, *jtag_bridge_addr;
 
 /* Regions for LPC I2C controller and LPC base register space */
 static const struct resource mlxplat_lpc_resources[] = {
@@ -3809,6 +3811,12 @@ static struct mlxreg_core_data mlxplat_mlxcpld_default_ng_regs_io_data[] = {
 		.mask = GENMASK(7, 0) & ~BIT(2),
 		.mode = 0444,
 	},
+	{
+		.label = "kexec_activated",
+		.reg = MLXPLAT_CPLD_LPC_REG_RESET_GP2_OFFSET,
+		.mask = GENMASK(7, 0) & ~BIT(1),
+		.mode = 0644,
+	},
 	{
 		.label = "erot1_reset",
 		.reg = MLXPLAT_CPLD_LPC_REG_RESET_GP2_OFFSET,
@@ -5339,9 +5347,9 @@ static struct mlxreg_core_platform_data mlxplat_mlxcpld_wd_set_type3[] = {
 static bool mlxplat_mlxcpld_writeable_reg(struct device *dev, unsigned int reg)
 {
 	switch (reg) {
+	case MLXPLAT_CPLD_LPC_REG_RESET_GP1_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_RESET_GP4_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_LED1_OFFSET:
-	case MLXPLAT_CPLD_LPC_REG_PG_RST_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_LED2_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_LED3_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_LED4_OFFSET:
@@ -5446,14 +5454,12 @@ static bool mlxplat_mlxcpld_readable_reg(struct device *dev, unsigned int reg)
 	case MLXPLAT_CPLD_LPC_REG_CPLD3_PN1_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_CPLD4_PN_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_CPLD4_PN1_OFFSET:
-	case MLXPLAT_CPLD_LPC_REG_CPLD5_PN_OFFSET:
-	case MLXPLAT_CPLD_LPC_REG_CPLD5_PN1_OFFSET:
+	case MLXPLAT_CPLD_LPC_REG_RESET_GP1_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_RESET_GP4_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_RESET_CAUSE_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_RST_CAUSE1_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_RST_CAUSE2_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_LED1_OFFSET:
-	case MLXPLAT_CPLD_LPC_REG_PG_RST_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_LED2_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_LED3_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_LED4_OFFSET:
@@ -5610,6 +5616,7 @@ static bool mlxplat_mlxcpld_volatile_reg(struct device *dev, unsigned int reg)
 	case MLXPLAT_CPLD_LPC_REG_CPLD2_PN1_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_CPLD3_PN_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_CPLD3_PN1_OFFSET:
+	case MLXPLAT_CPLD_LPC_REG_RESET_GP1_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_CPLD5_PN_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_CPLD5_PN1_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_RESET_GP4_OFFSET:
@@ -5617,7 +5624,6 @@ static bool mlxplat_mlxcpld_volatile_reg(struct device *dev, unsigned int reg)
 	case MLXPLAT_CPLD_LPC_REG_RST_CAUSE1_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_RST_CAUSE2_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_LED1_OFFSET:
-	case MLXPLAT_CPLD_LPC_REG_PG_RST_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_LED2_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_LED3_OFFSET:
 	case MLXPLAT_CPLD_LPC_REG_LED4_OFFSET:
@@ -5937,16 +5943,26 @@ static int mlxplat_fpga_reg_read(void *context, unsigned int reg, unsigned int *
 	unsigned int msb_off = MLXPLAT_FPGA_PCI_MSB_ADDR;
 	int err;
 
+	if (reg >= MLXPLAT_CPLD_LPC_REG_EXT_MIN_OFFSET) {
+		if (reg <= MLXPLAT_CPLD_LPC_REG_EXT_MID_OFFSET) {
+			/* Access to 2-nd FPGA bank */
+			*val = ioread8(i2c_bridge_addr + reg -
+				       MLXPLAT_CPLD_LPC_REG_EXT_MIN_OFFSET);
+			return 0;
+		}
+		else {
+			/* Access to 3-rd FPGA bank */
+			reg -= MLXPLAT_CPLD_LPC_REG_EXT_MIN_OFFSET;
+			msb_off = MLXPLAT_FPGA_PCI_MSB_EXT_ADDR;
+		}
+	}
+
 	/* Verify there is no pending transactions */
 	err = mlxplat_fpga_completion_wait(ctx);
 	if (err)
 		return err;
 
 	/* Set address in register space */
-	if (reg >= MLXPLAT_CPLD_LPC_REG_EXT_MIN_OFFSET) {
-		reg -= MLXPLAT_CPLD_LPC_REG_EXT_MIN_OFFSET;
-		msb_off = MLXPLAT_FPGA_PCI_MSB_EXT_ADDR;
-	}
 	iowrite8(msb_off, ctx->base + MLXPLAT_FPGA_PCI_MSB_ADDR_OFFSET);
 	iowrite8(reg, ctx->base + MLXPLAT_FPGA_PCI_LSB_ADDR_OFFSET);
 	/* Activate read operation */
@@ -5969,17 +5985,26 @@ static int mlxplat_fpga_reg_write(void *context, unsigned int reg, unsigned int
 	unsigned int msb_off = MLXPLAT_FPGA_PCI_MSB_ADDR;
 	int err;
 
+	if (reg >= MLXPLAT_CPLD_LPC_REG_EXT_MIN_OFFSET) {
+		if (reg <= MLXPLAT_CPLD_LPC_REG_EXT_MID_OFFSET) {
+			/* Access to 2-nd FPGA bank */
+			iowrite8(val, i2c_bridge_addr + reg - MLXPLAT_CPLD_LPC_REG_EXT_MIN_OFFSET);
+			wmb();
+			return 0;
+		}
+		else {
+			/* Access to 3-rd FPGA bank */
+			reg -= MLXPLAT_CPLD_LPC_REG_EXT_MIN_OFFSET;
+			msb_off = MLXPLAT_FPGA_PCI_MSB_EXT_ADDR;
+		}
+	}
+
 	/* Verify there is no pending transactions */
 	err = mlxplat_fpga_completion_wait(ctx);
 	if (err)
 		return err;
 
 	/* Set address in register space */
-	/* Set address in register space */
-	if (reg >= MLXPLAT_CPLD_LPC_REG_EXT_MIN_OFFSET) {
-		reg -= MLXPLAT_CPLD_LPC_REG_EXT_MIN_OFFSET;
-		msb_off = MLXPLAT_FPGA_PCI_MSB_EXT_ADDR;
-	}
 	iowrite8(msb_off, ctx->base + MLXPLAT_FPGA_PCI_MSB_ADDR_OFFSET);
 	iowrite8(reg, ctx->base + MLXPLAT_FPGA_PCI_LSB_ADDR_OFFSET);
 	/* Set data to be written */
@@ -6025,15 +6050,18 @@ static struct spi_board_info *mlxplat_spi;
 static struct pci_dev *lpc_bridge;
 static struct pci_dev *i2c_bridge;
 static struct pci_dev *jtag_bridge;
-void __iomem *i2c_bridge_addr, *jtag_bridge_addr;
 
 /* Platform default reset function */
 static int mlxplat_reboot_notifier(struct notifier_block *nb, unsigned long action, void *unused)
 {
 	struct mlxplat_priv *priv = platform_get_drvdata(mlxplat_dev);
+	u32 regval;
+	int ret;
+
+	ret = regmap_read(priv->regmap, MLXPLAT_CPLD_LPC_REG_RESET_GP1_OFFSET, &regval);
 
-	if (action == SYS_RESTART)
-		regmap_write(priv->regmap, MLXPLAT_CPLD_LPC_REG_PG_RST_OFFSET,
+	if (action == SYS_RESTART && !ret && !(regval & BIT(0)))
+		regmap_write(priv->regmap, MLXPLAT_CPLD_LPC_REG_RESET_GP2_OFFSET,
 			     MLXPLAT_CPLD_RESET_MASK);
 
 	return NOTIFY_DONE;
@@ -6074,6 +6102,8 @@ static int __init mlxplat_dmi_default_matched(const struct dmi_system_id *dmi)
 	mlxplat_wd_data[0] = &mlxplat_mlxcpld_wd_set_type1[0];
 	mlxplat_i2c = &mlxplat_mlxcpld_i2c_default_data;
 
+	platform_device_register_simple(MLX_PLAT_DEVICE_NAME, -1, NULL, 0);
+
 	return 1;
 }
 
@@ -6097,6 +6127,8 @@ static int __init mlxplat_dmi_default_wc_matched(const struct dmi_system_id *dmi
 	mlxplat_wd_data[0] = &mlxplat_mlxcpld_wd_set_type1[0];
 	mlxplat_i2c = &mlxplat_mlxcpld_i2c_default_data;
 
+	platform_device_register_simple(MLX_PLAT_DEVICE_NAME, -1, NULL, 0);
+
 	return 1;
 }
 
@@ -6122,6 +6154,8 @@ static int __init mlxplat_dmi_default_eth_wc_blade_matched(const struct dmi_syst
 	mlxplat_i2c = &mlxplat_mlxcpld_i2c_ng_data;
 	mlxplat_regmap_config = &mlxplat_mlxcpld_regmap_config_ng;
 
+	platform_device_register_simple(MLX_PLAT_DEVICE_NAME, -1, NULL, 0);
+
 	return 1;
 }
 
@@ -6145,6 +6179,8 @@ static int __init mlxplat_dmi_msn21xx_matched(const struct dmi_system_id *dmi)
 	mlxplat_wd_data[0] = &mlxplat_mlxcpld_wd_set_type1[0];
 	mlxplat_i2c = &mlxplat_mlxcpld_i2c_default_data;
 
+	platform_device_register_simple(MLX_PLAT_DEVICE_NAME, -1, NULL, 0);
+
 	return 1;
 }
 
@@ -6168,6 +6204,8 @@ static int __init mlxplat_dmi_msn274x_matched(const struct dmi_system_id *dmi)
 	mlxplat_wd_data[0] = &mlxplat_mlxcpld_wd_set_type1[0];
 	mlxplat_i2c = &mlxplat_mlxcpld_i2c_default_data;
 
+	platform_device_register_simple(MLX_PLAT_DEVICE_NAME, -1, NULL, 0);
+
 	return 1;
 }
 
@@ -6191,6 +6229,8 @@ static int __init mlxplat_dmi_msn201x_matched(const struct dmi_system_id *dmi)
 	mlxplat_wd_data[0] = &mlxplat_mlxcpld_wd_set_type1[0];
 	mlxplat_i2c = &mlxplat_mlxcpld_i2c_default_data;
 
+	platform_device_register_simple(MLX_PLAT_DEVICE_NAME, -1, NULL, 0);
+
 	return 1;
 }
 
@@ -6217,6 +6257,8 @@ static int __init mlxplat_dmi_qmb7xx_matched(const struct dmi_system_id *dmi)
 	mlxplat_i2c = &mlxplat_mlxcpld_i2c_ng_data;
 	mlxplat_regmap_config = &mlxplat_mlxcpld_regmap_config_ng;
 
+	platform_device_register_simple(MLX_PLAT_DEVICE_NAME, -1, NULL, 0);
+
 	return 1;
 }
 
@@ -6242,6 +6284,8 @@ static int __init mlxplat_dmi_comex_matched(const struct dmi_system_id *dmi)
 	mlxplat_i2c = &mlxplat_mlxcpld_i2c_default_data;
 	mlxplat_regmap_config = &mlxplat_mlxcpld_regmap_config_comex;
 
+	platform_device_register_simple(MLX_PLAT_DEVICE_NAME, -1, NULL, 0);
+
 	return 1;
 }
 
@@ -6268,6 +6312,8 @@ static int __init mlxplat_dmi_ng400_matched(const struct dmi_system_id *dmi)
 	mlxplat_i2c = &mlxplat_mlxcpld_i2c_ng_data;
 	mlxplat_regmap_config = &mlxplat_mlxcpld_regmap_config_ng400;
 
+	platform_device_register_simple(MLX_PLAT_DEVICE_NAME, -1, NULL, 0);
+
 	return 1;
 }
 
@@ -6288,6 +6334,8 @@ static int __init mlxplat_dmi_modular_matched(const struct dmi_system_id *dmi)
 	mlxplat_i2c = &mlxplat_mlxcpld_i2c_ng_data;
 	mlxplat_regmap_config = &mlxplat_mlxcpld_regmap_config_eth_modular;
 
+	platform_device_register_simple(MLX_PLAT_DEVICE_NAME, -1, NULL, 0);
+
 	return 1;
 }
 
@@ -6310,6 +6358,8 @@ static int __init mlxplat_dmi_chassis_blade_matched(const struct dmi_system_id *
 	mlxplat_i2c = &mlxplat_mlxcpld_i2c_ng_data;
 	mlxplat_regmap_config = &mlxplat_mlxcpld_regmap_config_ng400;
 
+	platform_device_register_simple(MLX_PLAT_DEVICE_NAME, -1, NULL, 0);
+
 	return 1;
 }
 
@@ -6336,6 +6386,8 @@ static int __init mlxplat_dmi_qmb8700_matched(const struct dmi_system_id *dmi)
 	mlxplat_i2c = &mlxplat_mlxcpld_i2c_ng_data;
 	mlxplat_regmap_config = &mlxplat_mlxcpld_regmap_config_ng;
 
+	platform_device_register_simple(MLX_PLAT_DEVICE_NAME, -1, NULL, 0);
+
 	return 1;
 }
 
@@ -6358,6 +6410,8 @@ static int __init mlxplat_dmi_rack_switch_matched(const struct dmi_system_id *dm
 	mlxplat_regmap_config = &mlxplat_mlxcpld_regmap_config_rack_switch;
 	mlxplat_spi = rack_switch_switch_spi_board_info;
 
+	platform_device_register_simple(MLX_PLAT_DEVICE_NAME, -1, NULL, 0);
+
 	return 1;
 }
 
@@ -6379,6 +6433,8 @@ static int __init mlxplat_dmi_ng800_matched(const struct dmi_system_id *dmi)
 	mlxplat_i2c = &mlxplat_mlxcpld_i2c_ng_data;
 	mlxplat_regmap_config = &mlxplat_mlxcpld_regmap_config_ng400;
 
+	platform_device_register_simple(MLX_PLAT_DEVICE_NAME, -1, NULL, 0);
+
 	return 1;
 }
 
@@ -6402,6 +6458,8 @@ static int __init mlxplat_dmi_l1_switch_matched(const struct dmi_system_id *dmi)
 	pm_power_off = mlxplat_poweroff;
 	mlxplat_spi = rack_switch_switch_spi_board_info;
 
+	platform_device_register_simple(MLX_PLAT_DEVICE_NAME, -1, NULL, 0);
+
 	return 1;
 }
 
@@ -6530,12 +6588,6 @@ static const struct dmi_system_id mlxplat_dmi_table[] __initconst = {
 			DMI_MATCH(DMI_BOARD_NAME, "VMOD0016"),
 		},
 	},
-	{
-		.callback = mlxplat_dmi_bf3_comex_default_matched,
-		.matches = {
-			DMI_EXACT_MATCH(DMI_PRODUCT_SKU, "HI151"),
-		},
-	},
 	{
 		.callback = mlxplat_dmi_l1_switch_matched,
 		.matches = {
@@ -7113,6 +7165,7 @@ static int mlxplat_probe(struct platform_device *pdev)
 	struct mlxplat_priv *priv;
 	int irq_fpga = 0, i, err;
 
+	mlxplat_dev = pdev;
 	acpi_dev = ACPI_COMPANION(&pdev->dev);
 	if (acpi_dev) {
 		irq_fpga = acpi_dev_gpio_irq_get(acpi_dev, 0);
@@ -7124,7 +7177,6 @@ static int mlxplat_probe(struct platform_device *pdev)
 	if (err)
 		return err;
 
-	mlxplat_dev = pdev;
 	priv = devm_kzalloc(&mlxplat_dev->dev, sizeof(struct mlxplat_priv),
 			    GFP_KERNEL);
 	if (!priv) {
-- 
2.20.1

