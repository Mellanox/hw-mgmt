From bbf62ac54cd70298f8954b62f32920f727a51e54 Mon Sep 17 00:00:00 2001
From: Jeremy Kerr <jk@codeconstruct.com.au>
Date: Wed, 10 Nov 2021 14:45:14 +0800
Subject: [PATCH backport 5.10 40/73] mctp: unify extended addressing
 implementation with upstream

The upstream version of the extended addressing support includes a few
updates:

 - explicity sockaddr field types
 - explicit sockaddr padding
 - fixed size of the haddr in the mctp_skb_cb
 - SOL_MCTP in linux/socket.h
 - fix for 'rc' initialisation path.

This change unifies the backport tree with the upstream version, as at
99ce45d5e7dbde399997a630f45ac9f654fa4bcc.

Signed-off-by: Jeremy Kerr <jk@codeconstruct.com.au>
---
 include/linux/socket.h    |  2 ++
 include/net/mctp.h        | 11 +++++------
 include/uapi/linux/mctp.h |  8 +++-----
 net/mctp/af_mctp.c        |  2 +-
 net/mctp/route.c          |  3 ++-
 5 files changed, 13 insertions(+), 13 deletions(-)

diff --git a/include/linux/socket.h b/include/linux/socket.h
index 4ee9afd3b014..713064ac2364 100644
--- a/include/linux/socket.h
+++ b/include/linux/socket.h
@@ -364,6 +364,8 @@ struct ucred {
 #define SOL_KCM		281
 #define SOL_TLS		282
 #define SOL_XDP		283
+/* #define SOL_MPCTP	284 */
+#define SOL_MCTP	285
 
 /* IPX options */
 #define IPX_TYPE	1
diff --git a/include/net/mctp.h b/include/net/mctp.h
index f5b441023feb..7e35ec79b909 100644
--- a/include/net/mctp.h
+++ b/include/net/mctp.h
@@ -11,6 +11,7 @@
 
 #include <linux/bits.h>
 #include <linux/mctp.h>
+#include <linux/netdevice.h>
 #include <net/net_namespace.h>
 #include <net/sock.h>
 
@@ -161,16 +162,13 @@ struct mctp_sk_key {
 
 struct mctp_skb_cb {
 	unsigned int	magic;
-	int		net;
+	unsigned int	net;
 	int		ifindex; /* extended/direct addressing if set */
-	unsigned char	halen;
 	mctp_eid_t	src;
-	unsigned char	haddr[];
+	unsigned char	halen;
+	unsigned char	haddr[MAX_ADDR_LEN];
 };
 
-#define MCTP_SKB_CB_HADDR_MAXLEN (sizeof((((struct sk_buff *)(NULL))->cb)) \
-				  - offsetof(struct mctp_skb_cb, haddr))
-
 /* skb control-block accessors with a little extra debugging for initial
  * development.
  *
@@ -192,6 +190,7 @@ static inline struct mctp_skb_cb *mctp_cb(struct sk_buff *skb)
 {
 	struct mctp_skb_cb *cb = (void *)skb->cb;
 
+	BUILD_BUG_ON(sizeof(struct mctp_skb_cb) > sizeof(skb->cb));
 	WARN_ON(cb->magic != 0x4d435450);
 	return (void *)(skb->cb);
 }
diff --git a/include/uapi/linux/mctp.h b/include/uapi/linux/mctp.h
index 55bafc48a526..53601a1a363e 100644
--- a/include/uapi/linux/mctp.h
+++ b/include/uapi/linux/mctp.h
@@ -32,8 +32,9 @@ struct sockaddr_mctp {
 struct sockaddr_mctp_ext {
 	struct sockaddr_mctp	smctp_base;
 	int			smctp_ifindex;
-	unsigned char		smctp_halen;
-	unsigned char		smctp_haddr[MAX_ADDR_LEN];
+	__u8			smctp_halen;
+	__u8			__smctp_pad0[3];
+	__u8			smctp_haddr[MAX_ADDR_LEN];
 };
 
 #define MCTP_NET_ANY		0x0
@@ -44,9 +45,6 @@ struct sockaddr_mctp_ext {
 #define MCTP_TAG_MASK		0x07
 #define MCTP_TAG_OWNER		0x08
 
-/* setsockopt(2) level & options */
-#define SOL_MCTP		0
-
 #define MCTP_OPT_ADDR_EXT	1
 
 #endif /* __UAPI_MCTP_H */
diff --git a/net/mctp/af_mctp.c b/net/mctp/af_mctp.c
index 5eae06aaf65c..d344b02a1cde 100644
--- a/net/mctp/af_mctp.c
+++ b/net/mctp/af_mctp.c
@@ -124,7 +124,7 @@ static int mctp_sendmsg(struct socket *sock, struct msghdr *msg, size_t len)
 		DECLARE_SOCKADDR(struct sockaddr_mctp_ext *,
 				 extaddr, msg->msg_name);
 
-		if (extaddr->smctp_halen > MCTP_SKB_CB_HADDR_MAXLEN) {
+		if (extaddr->smctp_halen > sizeof(cb->haddr)) {
 			rc = -EINVAL;
 			goto err_free;
 		}
diff --git a/net/mctp/route.c b/net/mctp/route.c
index d71b43a1fa4c..35c3894a670d 100644
--- a/net/mctp/route.c
+++ b/net/mctp/route.c
@@ -797,6 +797,8 @@ int mctp_local_output(struct sock *sk, struct mctp_route *rt,
 	int rc;
 	u8 tag;
 
+	rc = -ENODEV;
+
 	if (rt) {
 		ext_rt = false;
 		dev = NULL;
@@ -808,7 +810,6 @@ int mctp_local_output(struct sock *sk, struct mctp_route *rt,
 		ext_rt = true;
 		rt = &tmp_rt;
 
-		rc = -ENODEV;
 		rcu_read_lock();
 		dev = dev_get_by_index_rcu(sock_net(sk), cb->ifindex);
 		if (!dev) {
-- 
2.20.1

