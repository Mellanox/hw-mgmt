From 58797f651264dd362655e7c45bce48a2929cf55c Mon Sep 17 00:00:00 2001
From: Michael Shych <michaelsh@nvidia.com>
Date: Mon, 11 Jul 2022 12:51:27 +0300
Subject: [PATCH backport 5.10 166/182] DS: leds: leds-mlxreg: Send udev event
 from leds-mlxreg driver.

Add sending udev event from leds-mlxreg driver in case of color change.
This patch will not be accepted in upstream as it provides no regular flow.
It's done as a workaround of SN2201 limitation, difference, and in order
to save compatibility of NOS work with sysfs attributes.
The patch should be taken to NOSs as exceptions to the upstream procedure.

Signed-off-by: Michael Shych <michaelsh@nvidia.com>
---
 drivers/leds/leds-mlxreg.c | 29 +++++++++++++++++++++++++++--
 1 file changed, 27 insertions(+), 2 deletions(-)

diff --git a/drivers/leds/leds-mlxreg.c b/drivers/leds/leds-mlxreg.c
index 7df4653a80d7..137ba5afa921 100644
--- a/drivers/leds/leds-mlxreg.c
+++ b/drivers/leds/leds-mlxreg.c
@@ -11,6 +11,7 @@
 #include <linux/of_device.h>
 #include <linux/platform_data/mlxreg.h>
 #include <linux/platform_device.h>
+#include <linux/string_helpers.h>
 #include <linux/regmap.h>
 
 /* Codes for LEDs. */
@@ -131,15 +132,39 @@ mlxreg_led_get_hw(struct mlxreg_led_data *led_data)
 	return LED_OFF;
 }
 
+static char *mlxreg_led_udev_envp[] = { NULL, NULL };
+
+static int
+mlxreg_led_udev_event_send(struct mlxreg_led_data *led_data, enum led_brightness value)
+{
+	struct mlxreg_core_data *data = led_data->data;
+	struct kobject *kobj = &led_data->led_cdev.dev->kobj;
+
+	char event_str[MLXREG_CORE_LABEL_MAX_SIZE + 2];
+	char label[MLXREG_CORE_LABEL_MAX_SIZE] = { 0 };
+
+	mlxreg_led_udev_envp[0] = event_str;
+	string_upper(label, data->label);
+	snprintf(event_str, MLXREG_CORE_LABEL_MAX_SIZE, "%s=%d", label, value);
+
+	return kobject_uevent_env(kobj, KOBJ_CHANGE, mlxreg_led_udev_envp);
+}
+
 static int
 mlxreg_led_brightness_set(struct led_classdev *cled, enum led_brightness value)
 {
 	struct mlxreg_led_data *led_data = cdev_to_priv(cled);
+	int err;
 
 	if (value)
-		return mlxreg_led_store_hw(led_data, led_data->base_color);
+		err = mlxreg_led_store_hw(led_data, led_data->base_color);
+	else
+		err = mlxreg_led_store_hw(led_data, MLXREG_LED_IS_OFF);
+
+	if (!err)
+		return mlxreg_led_udev_event_send(led_data, value);
 	else
-		return mlxreg_led_store_hw(led_data, MLXREG_LED_IS_OFF);
+		return err;
 }
 
 static enum led_brightness
-- 
2.20.1

