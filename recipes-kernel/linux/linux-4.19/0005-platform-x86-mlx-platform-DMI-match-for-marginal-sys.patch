From 7f4cedc718f415cf7aa0c09bcc9ffdbb5f43b093 Mon Sep 17 00:00:00 2001
From: Vadim Pasternak <vadimp@mellanox.com>
Date: Mon, 2 Sep 2019 09:11:02 +0300
Subject: [PATCH not for upstream] platform/x86: mlx-platform: DMI match for
 marginal systems

Add DMI match rule for the system with broken SMBIOS.

Signed-off-by: Vadim Pasternak <vadimp@mellanox.com>
---
 drivers/platform/x86/mlx-platform.c | 26 ++++++++++++++++++++++++++
 1 file changed, 26 insertions(+)

diff --git a/drivers/platform/x86/mlx-platform.c b/drivers/platform/x86/mlx-platform.c
index c3e75b26fe0b..62c880b56f58 100644
--- a/drivers/platform/x86/mlx-platform.c
+++ b/drivers/platform/x86/mlx-platform.c
@@ -6,6 +6,7 @@
  * Copyright (C) 2016-2018 Vadim Pasternak <vadimp@mellanox.com>
  */
 
+#include <asm/intel-family.h>
 #include <linux/device.h>
 #include <linux/dmi.h>
 #include <linux/i2c.h>
@@ -2009,6 +2010,24 @@ static int __init mlxplat_dmi_qmb7xx_matched(const struct dmi_system_id *dmi)
 	return 1;
 };
 
+static int __init mlxplat_dmi_undefined_matched(const struct dmi_system_id *dmi)
+{
+	switch (boot_cpu_data.x86_model) {
+	case INTEL_FAM6_IVYBRIDGE:
+			return mlxplat_dmi_default_matched(dmi);
+
+	case INTEL_FAM6_ATOM_SILVERMONT_X:
+			return mlxplat_dmi_msn21xx_matched(dmi);
+
+	case INTEL_FAM6_BROADWELL_XEON_D: /* fall through */
+	case INTEL_FAM6_BROADWELL_CORE:
+		return mlxplat_dmi_qmb7xx_matched(dmi);
+
+	default:
+		return 1;
+	}
+}
+
 static int __init mlxplat_dmi_comex_matched(const struct dmi_system_id *dmi)
 {
 	int i;
@@ -2149,6 +2168,13 @@ static const struct dmi_system_id mlxplat_dmi_table[] __initconst = {
 			DMI_MATCH(DMI_PRODUCT_NAME, "MSN38"),
 		},
 	},
+	/* This tuple must be last */
+	{
+		.callback = mlxplat_dmi_undefined_matched,
+		.matches = {
+			DMI_MATCH(DMI_BOARD_VENDOR, "Mellanox Technologies"),
+		},
+	},
 	{ }
 };
 
-- 
2.20.1

