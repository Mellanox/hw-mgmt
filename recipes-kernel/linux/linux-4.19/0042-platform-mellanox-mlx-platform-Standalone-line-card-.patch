From 7237589e8a762940b5e19dfc4d9e7148675e4aff Mon Sep 17 00:00:00 2001
From: Vadim Pasternak <vadimp@nvidia.com>
Date: Sun, 30 Aug 2020 18:05:18 +0300
Subject: [PATCH backport v4.19 19/19] platform/mellanox: mlx-platform:
 Standalone line card bring-up

Temporary modification for standalone line card bring-up.

Signed-off-by: Vadim Pasternak <vadimp@mellanox.com>
---
 drivers/platform/mellanox/mlxreg-lc.c |  26 +++----
 drivers/platform/x86/mlx-platform.c   | 134 +++++++++++++++++-----------------
 2 files changed, 81 insertions(+), 79 deletions(-)

diff --git a/drivers/platform/mellanox/mlxreg-lc.c b/drivers/platform/mellanox/mlxreg-lc.c
index e557480d2..842fe250c 100644
--- a/drivers/platform/mellanox/mlxreg-lc.c
+++ b/drivers/platform/mellanox/mlxreg-lc.c
@@ -14,19 +14,19 @@
 #include <linux/regmap.h>
 
 /* I2C bus IO offsets */
-#define MLXREG_LC_REG_CPLD1_VER_OFFSET		0x00
-#define MLXREG_LC_REG_CPLD2_VER_OFFSET		0x01
-#define MLXREG_LC_REG_CPLD1_PN_OFFSET		0x04
-#define MLXREG_LC_REG_CPLD2_PN_OFFSET		0x06
-#define MLXREG_LC_REG_RESET_CAUSE_OFFSET	0x1d
-#define MLXREG_LC_REG_LED1_OFFSET		0x20
-#define MLXREG_LC_REG_GP0_OFFSET		0x2e
-#define MLXREG_LC_REG_FIELD_UPGRADE		0x34
-#define MLXREG_LC_CHANNEL_I2C_REG		0xdc
-#define MLXREG_LC_REG_CPLD1_MVER_OFFSET		0xde
-#define MLXREG_LC_REG_CPLD2_MVER_OFFSET		0xdf
-#define MLXREG_LC_REG_MAX_POWER_OFFSET		0xf1
-#define MLXREG_LC_REG_CONFIG_OFFSET		0xfb
+#define MLXREG_LC_REG_CPLD1_VER_OFFSET		0x2500
+#define MLXREG_LC_REG_CPLD2_VER_OFFSET		0x2501
+#define MLXREG_LC_REG_CPLD1_PN_OFFSET		0x2504
+#define MLXREG_LC_REG_CPLD2_PN_OFFSET		0x2506
+#define MLXREG_LC_REG_RESET_CAUSE_OFFSET	0x251d
+#define MLXREG_LC_REG_LED1_OFFSET		0x2520
+#define MLXREG_LC_REG_GP0_OFFSET		0x252e
+#define MLXREG_LC_REG_FIELD_UPGRADE		0x2534
+#define MLXREG_LC_CHANNEL_I2C_REG		0x25dc
+#define MLXREG_LC_REG_CPLD1_MVER_OFFSET		0x25de
+#define MLXREG_LC_REG_CPLD2_MVER_OFFSET		0x25df
+#define MLXREG_LC_REG_MAX_POWER_OFFSET		0x25f1
+#define MLXREG_LC_REG_CONFIG_OFFSET		0x25fb
 
 #define MLXREG_LC_BASE_NR		100
 #define MLXREG_LC_SET_BASE_NR(slot)	(MLXREG_LC_BASE_NR * ((slot) - 1))
diff --git a/drivers/platform/x86/mlx-platform.c b/drivers/platform/x86/mlx-platform.c
index 61868e060..3292d6ab6 100644
--- a/drivers/platform/x86/mlx-platform.c
+++ b/drivers/platform/x86/mlx-platform.c
@@ -427,6 +427,7 @@ static const int mlxplat_modular_channels[] = {
 
 /* Platform modular mux data */
 static struct i2c_mux_reg_platform_data mlxplat_modular_mux_data[] = {
+#if 0
 	{
 		.parent = 1,
 		.base_nr = MLXPLAT_CPLD_CH1,
@@ -437,6 +438,7 @@ static struct i2c_mux_reg_platform_data mlxplat_modular_mux_data[] = {
 		.values = mlxplat_modular_upper_channel,
 		.n_values = ARRAY_SIZE(mlxplat_modular_upper_channel),
 	},
+#endif
 	{
 		.parent = 1,
 		.base_nr = MLXPLAT_CPLD_CH2_ETH_MODULAR,
@@ -1136,56 +1138,56 @@ struct mlxreg_core_hotplug_platform_data mlxplat_mlxcpld_ext_data = {
 static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_act_data[] = {
 	{
 		.label = "lc1_active",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_OK_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_OK_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(0),
 		.hpdev.nr = MLXPLAT_CPLD_NR_NONE,
 		.slot = 1,
 	},
 	{
 		.label = "lc2_active",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_OK_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_OK_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(1),
 		.hpdev.nr = MLXPLAT_CPLD_NR_NONE,
 		.slot = 2,
 	},
 	{
 		.label = "lc3_active",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_OK_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_OK_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(2),
 		.hpdev.nr = MLXPLAT_CPLD_NR_NONE,
 		.slot = 3,
 	},
 	{
 		.label = "lc4_active",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_OK_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_OK_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(3),
 		.hpdev.nr = MLXPLAT_CPLD_NR_NONE,
 		.slot = 4,
 	},
 	{
 		.label = "lc5_active",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_OK_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_OK_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(4),
 		.hpdev.nr = MLXPLAT_CPLD_NR_NONE,
 		.slot = 5,
 	},
 	{
 		.label = "lc6_active",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_OK_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_OK_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(5),
 		.hpdev.nr = MLXPLAT_CPLD_NR_NONE,
 		.slot = 6,
 	},
 	{
 		.label = "lc7_active",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_OK_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_OK_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(6),
 		.hpdev.nr = MLXPLAT_CPLD_NR_NONE,
 		.slot = 7,
 	},
 	{
 		.label = "lc8_active",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_OK_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_OK_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(7),
 		.hpdev.nr = MLXPLAT_CPLD_NR_NONE,
 		.slot = 8,
@@ -1195,8 +1197,8 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_act_data[] = {
 static struct mlxreg_core_item mlxplat_mlxcpld_lc_act_data_items[] = {
 	{
 		.data = mlxplat_mlxcpld_modular_lc_act_data,
-		.aggr_mask = MLXPLAT_CPLD_AGGR_MASK_LC_ACT,
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_OK_OFFSET,
+		.aggr_mask = /* MLXPLAT_CPLD_AGGR_MASK_LC_ACT */ MLXPLAT_CPLD_AGGR_MASK_NG_DEF,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_OK_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = MLXPLAT_CPLD_LPC_LC_MASK,
 		.count = ARRAY_SIZE(mlxplat_mlxcpld_modular_lc_act_data),
 	},
@@ -1236,25 +1238,25 @@ static struct i2c_board_info mlxplat_mlxcpld_lc_i2c_dev[] = {
 static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_pr_items_data[] = {
 	{
 		.label = "lc1_present",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_IN_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_IN_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(0),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
-		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(0),
+		.hpdev.nr = /* MLXPLAT_CPLD_NR_LC_SET(0) */ 4,
 		.hpdev.action = MLXREG_HOTPLUG_DEVICE_NO_ACTION,
 		.slot = 1,
 	},
 	{
 		.label = "lc2_present",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_IN_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_IN_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(1),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
-		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(1),
+		.hpdev.nr = /* MLXPLAT_CPLD_NR_LC_SET(1) */ 5,
 		.hpdev.action = MLXREG_HOTPLUG_DEVICE_NO_ACTION,
 		.slot = 2,
 	},
 	{
 		.label = "lc3_present",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_IN_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_IN_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(2),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(2),
@@ -1263,7 +1265,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_pr_items_data[] = {
 	},
 	{
 		.label = "lc4_present",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_IN_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_IN_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(3),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(3),
@@ -1272,7 +1274,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_pr_items_data[] = {
 	},
 	{
 		.label = "lc5_present",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_IN_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_IN_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(4),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(4),
@@ -1281,7 +1283,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_pr_items_data[] = {
 	},
 	{
 		.label = "lc6_present",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_IN_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_IN_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(5),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(5),
@@ -1290,7 +1292,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_pr_items_data[] = {
 	},
 	{
 		.label = "lc7_present",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_IN_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_IN_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(6),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(6),
@@ -1299,7 +1301,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_pr_items_data[] = {
 	},
 	{
 		.label = "lc8_present",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_IN_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_IN_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(7),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(7),
@@ -1311,25 +1313,25 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_pr_items_data[] = {
 static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_ver_items_data[] = {
 	{
 		.label = "lc1_verified",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_VR_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_VR_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(0),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
-		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(0),
+		.hpdev.nr = /* MLXPLAT_CPLD_NR_LC_SET(0) */ 4,
 		.hpdev.action = MLXREG_HOTPLUG_DEVICE_PLATFORM_PROBE_ACTION,
 		.slot = 1,
 	},
 	{
 		.label = "lc2_verified",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_VR_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_VR_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(1),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
-		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(1),
+		.hpdev.nr = /* MLXPLAT_CPLD_NR_LC_SET(1) */ 5,
 		.hpdev.action = MLXREG_HOTPLUG_DEVICE_PLATFORM_PROBE_ACTION,
 		.slot = 2,
 	},
 	{
 		.label = "lc3_verified",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_VR_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_VR_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(2),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(2),
@@ -1338,7 +1340,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_ver_items_data[] = {
 	},
 	{
 		.label = "lc4_verified",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_VR_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_VR_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(3),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(3),
@@ -1347,7 +1349,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_ver_items_data[] = {
 	},
 	{
 		.label = "lc5_verified",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_VR_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_VR_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(4),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(4),
@@ -1356,7 +1358,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_ver_items_data[] = {
 	},
 	{
 		.label = "lc6_verified",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_VR_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_VR_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(5),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(5),
@@ -1365,7 +1367,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_ver_items_data[] = {
 	},
 	{
 		.label = "lc7_verified",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_VR_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_VR_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(6),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(6),
@@ -1374,7 +1376,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_ver_items_data[] = {
 	},
 	{
 		.label = "lc8_verified",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_VR_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_VR_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(7),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(7),
@@ -1386,25 +1388,25 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_ver_items_data[] = {
 static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_pg_data[] = {
 	{
 		.label = "lc1_powered",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_PG_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_PG_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(0),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
-		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(0),
+		.hpdev.nr = /* MLXPLAT_CPLD_NR_LC_SET(0) */ 4,
 		.hpdev.action = MLXREG_HOTPLUG_DEVICE_PLATFORM_REMOVE_ACTION,
 		.slot = 1,
 	},
 	{
 		.label = "lc2_powered",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_PG_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_PG_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(1),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
-		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(1),
+		.hpdev.nr = /* MLXPLAT_CPLD_NR_LC_SET(1) */ 5,
 		.hpdev.action = MLXREG_HOTPLUG_DEVICE_PLATFORM_REMOVE_ACTION,
 		.slot = 2,
 	},
 	{
 		.label = "lc3_powered",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_PG_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_PG_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(2),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(2),
@@ -1413,7 +1415,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_pg_data[] = {
 	},
 	{
 		.label = "lc4_powered",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_PG_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_PG_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(3),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(3),
@@ -1422,7 +1424,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_pg_data[] = {
 	},
 	{
 		.label = "lc5_powered",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_PG_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_PG_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(4),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(4),
@@ -1431,7 +1433,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_pg_data[] = {
 	},
 	{
 		.label = "lc6_powered",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_PG_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_PG_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(5),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(5),
@@ -1440,7 +1442,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_pg_data[] = {
 	},
 	{
 		.label = "lc7_powered",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_PG_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_PG_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(6),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(6),
@@ -1449,7 +1451,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_pg_data[] = {
 	},
 	{
 		.label = "lc8_powered",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_PG_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_PG_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(7),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(7),
@@ -1461,25 +1463,25 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_pg_data[] = {
 static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_ready_data[] = {
 	{
 		.label = "lc1_ready",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_RD_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_RD_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(0),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
-		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(0),
+		.hpdev.nr = /* MLXPLAT_CPLD_NR_LC_SET(0) */ 4,
 		.hpdev.action = MLXREG_HOTPLUG_DEVICE_NO_ACTION,
 		.slot = 1,
 	},
 	{
 		.label = "lc2_ready",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_RD_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_RD_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(1),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
-		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(1),
+		.hpdev.nr = /* MLXPLAT_CPLD_NR_LC_SET(1) */ 5,
 		.hpdev.action = MLXREG_HOTPLUG_DEVICE_NO_ACTION,
 		.slot = 2,
 	},
 	{
 		.label = "lc3_ready",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_RD_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_RD_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(2),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(2),
@@ -1488,7 +1490,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_ready_data[] = {
 	},
 	{
 		.label = "lc4_ready",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_RD_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_RD_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(3),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(3),
@@ -1497,7 +1499,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_ready_data[] = {
 	},
 	{
 		.label = "lc5_ready",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_RD_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_RD_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(4),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(4),
@@ -1506,7 +1508,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_ready_data[] = {
 	},
 	{
 		.label = "lc6_ready",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_RD_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_RD_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(5),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(5),
@@ -1515,7 +1517,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_ready_data[] = {
 	},
 	{
 		.label = "lc7_ready",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_RD_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_RD_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(6),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(6),
@@ -1524,7 +1526,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_ready_data[] = {
 	},
 	{
 		.label = "lc8_ready",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_RD_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_RD_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(7),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(7),
@@ -1536,25 +1538,25 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_ready_data[] = {
 static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_synced_data[] = {
 	{
 		.label = "lc1_synced",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_SN_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_SN_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(0),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
-		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(0),
+		.hpdev.nr = /* MLXPLAT_CPLD_NR_LC_SET(0) */ 4,
 		.hpdev.action = MLXREG_HOTPLUG_DEVICE_NO_ACTION,
 		.slot = 1,
 	},
 	{
 		.label = "lc2_synced",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_SN_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_SN_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(1),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
-		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(1),
+		.hpdev.nr = /* MLXPLAT_CPLD_NR_LC_SET(1) */ 5,
 		.hpdev.action = MLXREG_HOTPLUG_DEVICE_NO_ACTION,
 		.slot = 2,
 	},
 	{
 		.label = "lc3_synced",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_SN_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_SN_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(2),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(2),
@@ -1563,7 +1565,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_synced_data[] = {
 	},
 	{
 		.label = "lc4_synced",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_SN_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_SN_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(3),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(3),
@@ -1572,7 +1574,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_synced_data[] = {
 	},
 	{
 		.label = "lc5_synced",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_SN_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_SN_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(4),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(4),
@@ -1581,7 +1583,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_synced_data[] = {
 	},
 	{
 		.label = "lc6_synced",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_SN_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_SN_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(5),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(5),
@@ -1590,7 +1592,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_synced_data[] = {
 	},
 	{
 		.label = "lc7_synced",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_SN_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_SN_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(6),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(6),
@@ -1599,7 +1601,7 @@ static struct mlxreg_core_data mlxplat_mlxcpld_modular_lc_synced_data[] = {
 	},
 	{
 		.label = "lc8_synced",
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_SN_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_SN_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = BIT(7),
 		.hpdev.brdinfo = &mlxplat_mlxcpld_lc_i2c_dev[0],
 		.hpdev.nr = MLXPLAT_CPLD_NR_LC_SET(7),
@@ -1650,8 +1652,8 @@ static struct mlxreg_core_item mlxplat_mlxcpld_modular_items[] = {
 	{
 		.data = mlxplat_mlxcpld_modular_lc_pr_items_data,
 		.kind = MLXREG_HOTPLUG_LC_PRESENT,
-		.aggr_mask = MLXPLAT_CPLD_AGGR_MASK_LC,
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_IN_OFFSET,
+		.aggr_mask = /* MLXPLAT_CPLD_AGGR_MASK_LC */ MLXPLAT_CPLD_AGGR_MASK_NG_DEF,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_IN_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = MLXPLAT_CPLD_LPC_LC_MASK,
 		.count = ARRAY_SIZE(mlxplat_mlxcpld_modular_lc_pr_items_data),
 		.inversed = 0,
@@ -1661,7 +1663,7 @@ static struct mlxreg_core_item mlxplat_mlxcpld_modular_items[] = {
 		.data = mlxplat_mlxcpld_modular_lc_ver_items_data,
 		.kind = MLXREG_HOTPLUG_LC_VERIFIED,
 		.aggr_mask = MLXPLAT_CPLD_AGGR_MASK_LC,
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_VR_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_VR_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = MLXPLAT_CPLD_LPC_LC_MASK,
 		.count = ARRAY_SIZE(mlxplat_mlxcpld_modular_lc_ver_items_data),
 		.inversed = 0,
@@ -1671,7 +1673,7 @@ static struct mlxreg_core_item mlxplat_mlxcpld_modular_items[] = {
 		.data = mlxplat_mlxcpld_modular_lc_pg_data,
 		.kind = MLXREG_HOTPLUG_LC_POWERED,
 		.aggr_mask = MLXPLAT_CPLD_AGGR_MASK_LC,
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_PG_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_PG_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = MLXPLAT_CPLD_LPC_LC_MASK,
 		.count = ARRAY_SIZE(mlxplat_mlxcpld_modular_lc_pg_data),
 		.inversed = 0,
@@ -1681,7 +1683,7 @@ static struct mlxreg_core_item mlxplat_mlxcpld_modular_items[] = {
 		.data = mlxplat_mlxcpld_modular_lc_ready_data,
 		.kind = MLXREG_HOTPLUG_LC_READY,
 		.aggr_mask = MLXPLAT_CPLD_AGGR_MASK_LC,
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_RD_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_RD_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = MLXPLAT_CPLD_LPC_LC_MASK,
 		.count = ARRAY_SIZE(mlxplat_mlxcpld_modular_lc_ready_data),
 		.inversed = 0,
@@ -1691,7 +1693,7 @@ static struct mlxreg_core_item mlxplat_mlxcpld_modular_items[] = {
 		.data = mlxplat_mlxcpld_modular_lc_synced_data,
 		.kind = MLXREG_HOTPLUG_LC_SYNCED,
 		.aggr_mask = MLXPLAT_CPLD_AGGR_MASK_LC,
-		.reg = MLXPLAT_CPLD_LPC_REG_LC_SN_OFFSET,
+		.reg = /* MLXPLAT_CPLD_LPC_REG_LC_SN_OFFSET */ MLXPLAT_CPLD_LPC_REG_PWR_OFFSET,
 		.mask = MLXPLAT_CPLD_LPC_LC_MASK,
 		.count = ARRAY_SIZE(mlxplat_mlxcpld_modular_lc_synced_data),
 		.inversed = 0,
-- 
2.11.0

