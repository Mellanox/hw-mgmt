[pytest]
minversion = 6.0
addopts = -ra -q --strict-markers --strict-config -W error
testpaths =
    offline
    hardware  
    integration
python_files = test_*.py
python_classes = Test*
python_functions = test_*
norecursedirs = legacy tools __pycache__ .git .tox

# Custom markers for test organization
markers =
    offline: Tests that require no special hardware (can run in CI/CD)
    hardware: Tests that require real hardware components  
    integration: End-to-end integration tests
    slow: Tests that take >5 seconds
    bom: BOM (Bill of Materials) parsing and analysis tests
    bmc: BMC communication and authentication tests
    logger: Logging functionality tests
    thermal: Thermal control and monitoring tests
    sensors: Hardware sensor tests
    sync: Data synchronization tests
    cli: Command-line interface tests
    
# Filtering shortcuts
# Run offline tests: pytest -m offline
# Run hardware tests: pytest -m hardware  
# Run integration tests: pytest -m integration
# Run fast tests only: pytest -m "not slow"
# Run specific component: pytest -m "logger or thermal"

# Coverage configuration
[coverage:run]
branch = True
source = 
    ../usr/usr/bin/hw_management_lib.py
    ../usr/usr/bin/hw_management_sync.py
    ../usr/usr/bin/hw_management_thermal_control.py
    ../usr/usr/bin/hw_management_thermal_control_2_5.py
    ../usr/usr/bin/hw_management_redfish_client.py
    ../usr/usr/bin/hw_management_vpd_parser.py
omit =
    */__init__.py
    */test_*.py
    */conftest.py
    */tools/*
    */legacy/*
    */__pycache__/*

[coverage:report]
show_missing = True
fail_under = 90
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:

[coverage:html]
directory = coverage_html_report
